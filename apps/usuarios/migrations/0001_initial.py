# Generated by Django 5.2 on 2025-06-08 05:39

import apps.usuarios.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "facultad",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "FTL"),
                            ("2", "FCS"),
                            ("3", "FIO"),
                            ("4", "FTI"),
                            ("5", "CITEC"),
                            ("6", "FTE"),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "anio_escolar",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Primero"),
                            ("2", "Segundo"),
                            ("3", "Tercero"),
                            ("4", "Cuarto"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "grupo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "carrera",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "Ingenieria en Ciencias Informáticas"),
                            ("2", "Ciberseguridad"),
                            ("3", "Bioinformática"),
                            ("4", "Redes y Seguridad Informática"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "curso",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Below A1", "Below A1"),
                            ("A1", "A1"),
                            ("A2", "A2"),
                            ("B1", "B1"),
                            ("B2", "B2"),
                            ("C1", "C1"),
                            ("C2", "C2"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "nivel",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A1", "A1"),
                            ("A2", "A2"),
                            ("B1", "B1"),
                            ("B2", "B2"),
                            ("C1", "C1"),
                            ("C2", "C2"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "foto_perfil",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=apps.usuarios.models.ruta_foto_perfil,
                    ),
                ),
                (
                    "tipo_usuario",
                    models.CharField(
                        choices=[
                            ("estudiante", "Estudiante"),
                            ("profesor", "Profesor del Centro"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
